---
title: weeknotes 13
subtitle: automatic rebasing
date: 2021-04-03
description:
  Weeknotes are an opportunity to reflect on the past week and look forward to
  the next one. Mine reflect on both my personal and my professional life, so
  expect a mixture of software stuff, video games, public sector work, existing
  as a trans person, tabletop roleplaying, and whatever else claims my
  attention.
previous: /weeknotes/012
next: /weeknotes/014
---

### roleplaying

We had a really good session last time! It feels like we made some story
progress and learned some things about the primary antagonists in the narrative.
Plus the players made some hard choices and did some strong negotiating. Looking
forward to the next session. Let's see if I can remember what's going on by
then...

### automatic rebasing

Now GitHub have an automatic merge feature, I've been thinking about how to
automate the whole process from deciding something should be merged to it being
merged. I have two needs not currently met:

- forcing a branch to be up to date with the target branch before merging
- automatically merging dependencies that pass tests

I've started working on a GitHub action to meet both of these needs. It will
look for labels in it's configured list or intent to merge by pressing the
button in GitHub, and do automatic rebases as needed to get things tested and
merged serially. However, it turns out that it's actually really hard to test
something meta like this. The tests need to run in a GitHub workflow and
interact with a repository on GitHub (for a proper integration test). The
approach I'm going for is to have a separate "test" repository that is
controlled by the "action" repository. A PR in the action repository will push
some code to the test repository, and open PRs and add labels as needed. The
repository itself won't own any code, allowing for changes to the testing
process to also be tested without introducing a feature lock on two
repositories. I'm not confident that this is actually going to work without
being extremely painful, though.

### sveltekit

[SvelteKit entered public beta](https://svelte.dev/blog/sveltekit-beta) this
week. A task for next week is to
[migrate this site over](https://kit.svelte.dev/migrating).

### tough week

It's been A Week.

I've been on a challenging project that suddenly ramped up this week and a
political clash with someone at work was reawoken, which put me into a bit of a
spiral in the middle of the week. The project has been a lesson in why we work
on collaborative teams when we can, but hopefully it's now done, or at least my
involvement in it is. I feel a bit bad having a week off now while others have
to finish it up, though...

### mental health in games

I participated in a research panel on Monday run by the
[Mental Health Foundation](https://www.mentalhealth.org.uk/), thinking about the
interaction between mental health and games. One of the things this research is
trying to focus on is how people can use or interact with games in a way that
_supports_ their mental health. Most of the existing research is about how Games
Are Bad, but it's more complicated than that. I personally use games as a mood
regulator, for example. If I'm very anxious, I find playing a game allows me to
escape that anxiety and do whatever processing I need to do, subconsciously.

### entertainment

We caught up on Westworld since it's back on a streaming service and have
started watching House again. It's formulaic, but the right balance of mindless
and engaging for decompressing.

I played through [Nuts](https://nuts.game/) in the bath on the weekend and have
started on Bravely Default II (the worst named game ever).

<details>
  <summary>Spoilers for Nuts</summary>
  <p>
    The ending was a little... underwhelming? Ok, so the squirrels are up to
    something, and they save you, not the other way around, but what happens to
    Evil Corp? What's the point of rescuing your journal, which is just a todo
    list and an empty photo scrap book?
  </p>
</details>
